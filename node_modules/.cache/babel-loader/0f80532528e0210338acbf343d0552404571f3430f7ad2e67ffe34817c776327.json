{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBGjgVRE6xqAsncuDDvjGI9NmfYEg49NnI\",\n  authDomain: \"crwn-clothing-db-94ccd.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-94ccd\",\n  storageBucket: \"crwn-clothing-db-94ccd.appspot.com\",\n  messagingSenderId: \"938524179560\",\n  appId: \"1:938524179560:web:96d825ba298d63fcfa4fdd\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating the user', error.massage);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  createUserWithEmailAndPassword(auth, email, password);\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","massage","createAuthUserWithEmailAndPassword","password"],"sources":["/Users/apple/Desktop/Complete React Developer in 2023 /capstone/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { \n    getAuth, \n    signInWithRedirect, \n    signInWithPopup, \n    GoogleAuthProvider,\n    createUserWithEmailAndPassword\n}   from 'firebase/auth';\n\nimport {\n    getFirestore,\n    doc,\n    getDoc,\n    setDoc\n} from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBGjgVRE6xqAsncuDDvjGI9NmfYEg49NnI\",\n    authDomain: \"crwn-clothing-db-94ccd.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-94ccd\",\n    storageBucket: \"crwn-clothing-db-94ccd.appspot.com\",\n    messagingSenderId: \"938524179560\",\n    appId: \"1:938524179560:web:96d825ba298d63fcfa4fdd\"\n  };\n  \n  // Initialize Firebase\n  const firebaseApp = initializeApp(firebaseConfig);\n\n  const googleProvider = new GoogleAuthProvider();\n    \n  googleProvider.setCustomParameters({\n        prompt: 'select_account'\n  })\n\n  export const auth = getAuth();\n  export const signInWithGooglePopup = () => \n    signInWithPopup(auth, googleProvider);  \n  export const signInWithGoogleRedirect = () => \n    signInWithRedirect(auth, googleProvider);\n  \n  export const db = getFirestore();\n\n  export const createUserDocumentFromAuth = async (userAuth) => {\n      if(!userAuth) return;\n    const userDocRef = doc(db, 'users', userAuth.uid)\n\n    const userSnapshot = await getDoc(userDocRef);\n\n    if(!userSnapshot.exists()) {\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt\n            })\n        } catch (error) {\n            console.log('error creating the user', error.massage);\n        }\n    }\n    return userDocRef;\n  };\n\n  export const createAuthUserWithEmailAndPassword = async (email, password) => {\n    createUserWithEmailAndPassword(auth, email, password)\n    if(!email || !password) return;\n\n    return await createUserWithEmailAndPassword(auth, email, password);\n  };"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACIC,OAAO,EACPC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,EAClBC,8BAA8B,QACzB,eAAe;AAExB,SACIC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,QACH,oBAAoB;AAE3B,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGjB,aAAa,CAACU,cAAc,CAAC;AAEjD,MAAMQ,cAAc,GAAG,IAAId,kBAAkB,EAAE;AAE/Cc,cAAc,CAACC,mBAAmB,CAAC;EAC7BC,MAAM,EAAE;AACd,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGpB,OAAO,EAAE;AAC7B,OAAO,MAAMqB,qBAAqB,GAAG,MACnCnB,eAAe,CAACkB,IAAI,EAAEH,cAAc,CAAC;AACvC,OAAO,MAAMK,wBAAwB,GAAG,MACtCrB,kBAAkB,CAACmB,IAAI,EAAEH,cAAc,CAAC;AAE1C,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAE;AAEhC,OAAO,MAAMmB,0BAA0B,GAAG,MAAOC,QAAQ,IAAK;EAC1D,IAAG,CAACA,QAAQ,EAAE;EAChB,MAAMC,UAAU,GAAGpB,GAAG,CAACiB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACE,GAAG,CAAC;EAEjD,MAAMC,YAAY,GAAG,MAAMrB,MAAM,CAACmB,UAAU,CAAC;EAE7C,IAAG,CAACE,YAAY,CAACC,MAAM,EAAE,EAAE;IACvB,MAAM;MAACC,WAAW;MAAEC;IAAK,CAAC,GAAGN,QAAQ;IACrC,MAAMO,SAAS,GAAG,IAAIC,IAAI,EAAE;IAE5B,IAAI;MACA,MAAMzB,MAAM,CAACkB,UAAU,EAAE;QACrBI,WAAW;QACXC,KAAK;QACLC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAACG,OAAO,CAAC;IACzD;EACJ;EACA,OAAOX,UAAU;AACnB,CAAC;AAED,OAAO,MAAMY,kCAAkC,GAAG,OAAOP,KAAK,EAAEQ,QAAQ,KAAK;EAC3EnC,8BAA8B,CAACgB,IAAI,EAAEW,KAAK,EAAEQ,QAAQ,CAAC;EACrD,IAAG,CAACR,KAAK,IAAI,CAACQ,QAAQ,EAAE;EAExB,OAAO,MAAMnC,8BAA8B,CAACgB,IAAI,EAAEW,KAAK,EAAEQ,QAAQ,CAAC;AACpE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}