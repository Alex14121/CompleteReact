{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Complete React Developer in 2023 /capstone/crwn-clothing/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  //find if cartItems contains productToAdd\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  //if found, increment quantity\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  //return new array with modified cartItems/new cart item\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  //find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n  //checkout if quantity is equal to 1, if it is remove thet item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  //return back cart items with matching cart item with reduced quantity\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n    ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0\n};\nconst cartReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case 'SET_CART_ITEMS':\n      return {\n        ...state,\n        ...payload\n      };\n    default:\n      throw new Error(`unhandled type of ${type} in cartReducer`);\n  }\n};\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [{\n    cartItems,\n    isCartOpen,\n    cartCount,\n    cartTotal\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n  const updateCartItemsReducer = newCartItems => {\n    const newCartCount = newCartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    const newCartTotal = newCartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    dispatch({\n      type: 'SET_CART_ITEMS',\n      payload: {\n        cartItems: newCartCount,\n        cartTotal: newCartTotal,\n        cartCount: newCartCount\n      }\n    });\n  };\n  const addItemToCart = productToAdd => {\n    const newCartItem = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItem);\n  };\n  const removeItemToCart = cartItemToRemove => {\n    const newCartItem = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItem);\n  };\n  const clearItemFromCart = cartItemToClear => {\n    const newCartItem = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItem);\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen: () => {},\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"KMBiYUJn8nwY9dsxTP1OP3slwQ8=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useReducer","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","cartItemToClear","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","INITIAL_STATE","cartReducer","state","action","type","payload","Error","CartProvider","children","dispatch","updateCartItemsReducer","newCartItems","newCartCount","reduce","total","newCartTotal","price","newCartItem","removeItemToCart","value"],"sources":["/Users/apple/Desktop/Complete React Developer in 2023 /capstone/crwn-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect, useReducer } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n    //find if cartItems contains productToAdd\n    const existingCartItem = cartItems.find((cartItem) => cartItem.id === productToAdd.id);\n    //if found, increment quantity\n    if(existingCartItem) {\n        return cartItems.map((cartItem) => cartItem.id === productToAdd.id ? \n            {...cartItem, quantity: cartItem.quantity + 1}\n            : cartItem\n        ); \n    }\n    //return new array with modified cartItems/new cart item\n    return [...cartItems, {...productToAdd, quantity: 1}];\n}\n\n\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n    //find the cart item to remove\n    const existingCartItem = cartItems.find(\n        (cartItem) => cartItem.id === cartItemToRemove.id\n        );\n    //checkout if quantity is equal to 1, if it is remove thet item from the cart\n    if(existingCartItem.quantity === 1) {\n        return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id)\n    }\n\n        \n    //return back cart items with matching cart item with reduced quantity\n    return cartItems.map((cartItem) => \n        cartItem.id === cartItemToRemove.id \n        ? {...cartItem, quantity: cartItem.quantity - 1}\n            : cartItem\n        );\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id)\n\n\nexport const CartContext = createContext({\n    isCartOpen: false,\n    setIsCartOpen: () => {},\n    cartItems: [],\n    addItemToCart: () => {},\n    removeItemFromCart: () => {},\n    clearItemFromCart: () => {},\n    cartCount: 0,\n    cartTotal: 0,\n});\n\nconst INITIAL_STATE = {\n    isCartOpen: false,\n    cartItems: [],\n    cartCount: 0,\n    cartTotal: 0,\n};\n\nconst cartReducer = (state, action) => {\n    const {type, payload} = action;\n\n    switch(type) {\n       case 'SET_CART_ITEMS':\n           return {\n            ...state,\n            ...payload\n           };\n        default:\n            throw new Error(`unhandled type of ${type} in cartReducer`); \n    }\n};\n\nexport const CartProvider = ({children}) => {\n    const [{cartItems, isCartOpen, cartCount, cartTotal}, dispatch] = \n        useReducer(cartReducer, INITIAL_STATE);\n\n\n\n    const updateCartItemsReducer = (newCartItems) => {\n        const newCartCount = newCartItems.reduce((total, cartItem) => total + cartItem.quantity, \n        0);\n\n        const newCartTotal = newCartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, \n        0);\n\n        dispatch({ type: 'SET_CART_ITEMS', payload: { cartItems: newCartCount, cartTotal: newCartTotal, cartCount: newCartCount }});\n    }\n\n    const addItemToCart = (productToAdd) => {\n        const newCartItem = addCartItem(cartItems, productToAdd);\n        updateCartItemsReducer(newCartItem);\n    };\n\n    const removeItemToCart = (cartItemToRemove) => {\n        const newCartItem = removeCartItem(cartItems, cartItemToRemove);\n        updateCartItemsReducer(newCartItem);\n    };\n\n    const clearItemFromCart = (cartItemToClear) => {\n        const newCartItem = clearCartItem(cartItems, cartItemToClear);\n        updateCartItemsReducer(newCartItem);\n    };\n\n    const value = {\n        isCartOpen, \n        setIsCartOpen: () => {}, \n        addItemToCart, \n        removeItemToCart,\n        clearItemFromCart,\n        cartItems, \n        cartCount,\n        cartTotal\n    }\n\n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>\n} "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}